Device: cuda:0
Building server's model...
Preparing data...
Prepare 1 ...
Prepare 2 ...
Prepare 3 ...
Prepare 4 ...
Prepare 5 ...
Source domain (for training) is ['1', '2', '3', '4', '5']
Target domain (for testing) is ['0']
/home/ubuntu/miniconda3/envs/tensorflow/lib/python3.10/site-packages/torchvision/models/_utils.py:252: UserWarning: Accessing the model URLs via the internal dictionary of the module is deprecated since 0.13 and may be removed in the future. Please access them via the appropriate Weights Enum instead.
  warnings.warn(
Saving to /home/ubuntu/long.ht/CCST/utils/../logs/../checkpoint/pacs/fedavg_no_fusion_no_DG_resnet50_locIter1/Target_0_seed_1/iters500_bs64_lr0.001_class345_490
=============Global iter is 0 ===============
----------------Training----------------
== Train epoch 0 ===
Traceback (most recent call last):
  File "/home/ubuntu/long.ht/CCST/./federated/fed_run.py", line 676, in <module>
    train_loss, train_acc = train(models[client_idx], train_loaders[client_idx], optimizers[client_idx], loss_fun, client_num, device, args, iter_idx, logger)
  File "/home/ubuntu/long.ht/CCST/./federated/fed_run.py", line 41, in train
    for it, data in enumerate(train_loader):
  File "/home/ubuntu/miniconda3/envs/tensorflow/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 628, in __next__
    data = self._next_data()
  File "/home/ubuntu/miniconda3/envs/tensorflow/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 671, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/ubuntu/miniconda3/envs/tensorflow/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 58, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/ubuntu/miniconda3/envs/tensorflow/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 58, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/ubuntu/long.ht/CCST/data/ImageLoader.py", line 66, in __getitem__
    img = self.get_image(index)
  File "/home/ubuntu/long.ht/CCST/data/ImageLoader.py", line 62, in get_image
    return self._image_transformer(img)
  File "/home/ubuntu/miniconda3/envs/tensorflow/lib/python3.10/site-packages/torchvision/transforms/transforms.py", line 95, in __call__
    img = t(img)
  File "/home/ubuntu/miniconda3/envs/tensorflow/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/ubuntu/miniconda3/envs/tensorflow/lib/python3.10/site-packages/torchvision/transforms/transforms.py", line 270, in forward
    return F.normalize(tensor, self.mean, self.std, self.inplace)
  File "/home/ubuntu/miniconda3/envs/tensorflow/lib/python3.10/site-packages/torchvision/transforms/functional.py", line 360, in normalize
    return F_t.normalize(tensor, mean=mean, std=std, inplace=inplace)
  File "/home/ubuntu/miniconda3/envs/tensorflow/lib/python3.10/site-packages/torchvision/transforms/functional_tensor.py", line 940, in normalize
    return tensor.sub_(mean).div_(std)
KeyboardInterrupt