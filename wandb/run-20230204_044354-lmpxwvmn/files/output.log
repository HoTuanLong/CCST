Device: cuda:0
Building server's model...
Preparing data...
Prepare 1 ...
Prepare 2 ...
Prepare 3 ...
Prepare 4 ...
Prepare 5 ...
Source domain (for training) is ['1', '2', '3', '4', '5']
Target domain (for testing) is ['0']
/home/ubuntu/miniconda3/envs/tensorflow/lib/python3.10/site-packages/torchvision/models/_utils.py:252: UserWarning: Accessing the model URLs via the internal dictionary of the module is deprecated since 0.13 and may be removed in the future. Please access them via the appropriate Weights Enum instead.
  warnings.warn(
Saving to /home/ubuntu/long.ht/CCST/utils/../logs/../checkpoint/pacs/fedavg_no_fusion_no_DG_resnet50_locIter1/Target_0_seed_1/iters500_bs32_lr0.001_class345_840
=============Global iter is 0 ===============
----------------Training----------------
== Train epoch 0 ===
Traceback (most recent call last):
  File "/home/ubuntu/long.ht/CCST/./federated/fed_run.py", line 676, in <module>
    train_loss, train_acc = train(models[client_idx], train_loaders[client_idx], optimizers[client_idx], loss_fun, client_num, device, args, iter_idx, logger)
  File "/home/ubuntu/long.ht/CCST/./federated/fed_run.py", line 80, in train
    loss.backward()
  File "/home/ubuntu/miniconda3/envs/tensorflow/lib/python3.10/site-packages/torch/_tensor.py", line 487, in backward
    torch.autograd.backward(
  File "/home/ubuntu/miniconda3/envs/tensorflow/lib/python3.10/site-packages/torch/autograd/__init__.py", line 197, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
RuntimeError: Unable to find a valid cuDNN algorithm to run convolution